name: Bygg og deploy ved push til master

on:
  push:
    branches:
      - main

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/determ-docker-test:${{ github.sha }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: test and build
        run: ./gradlew test build
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

      - name: Bazel Build Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NB: BAZEL_CONTAINER_IMAGE_TARGET_NAME must be in sync with sign.sh, preverify.sh and BUILD.bazel
          BAZEL_CONTAINER_IMAGE_TARGET_NAME: determ-docker-test
        run: |
          # Build bazel docker image:
          "${GITHUB_WORKSPACE}/bin/bazel" build //:${BAZEL_CONTAINER_IMAGE_TARGET_NAME}
          # Import from bazel into local docker registry:
          "${GITHUB_WORKSPACE}/bin/bazel" run //:${BAZEL_CONTAINER_IMAGE_TARGET_NAME}

          export IMAGE_ID="$(docker image inspect bazel:${BAZEL_CONTAINER_IMAGE_TARGET_NAME} -f '{{.Id}}')"
          echo "Image Id = ${IMAGE_ID}"
          # TAG our image with desired name/tag:
          docker tag ${IMAGE_ID} ${IMAGE}

          echo "Preverifying"
          ./preverify.sh

          echo "Pushing ${IMAGE}"
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy_to_dev:
    name: Deploy to dev
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_API_KEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/nais.yml
          VARS: deploy/dev.yml
